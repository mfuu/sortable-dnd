import{_ as t,c as s,o as a,a3 as i}from"./chunks/framework.BKgA0_9f.js";const k=JSON.parse('{"title":"Methods","description":"","frontmatter":{},"headers":[],"relativePath":"guide/methods.md","filePath":"guide/methods.md"}'),l={name:"guide/methods.md"};function n(o,e,d,h,r,p){return a(),s("div",null,e[0]||(e[0]=[i('<h1 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h1><p><strong>example</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">let</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> sortable</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Sortable</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">el</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">sortable</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">destroy</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span></code></pre></div><h2 id="destroy" tabindex="-1"><code>destroy</code> <a class="header-anchor" href="#destroy" aria-label="Permalink to &quot;`destroy`&quot;">​</a></h2><p>Manually clear all the state of the component, using this method the component will not be draggable</p><h2 id="option-key-value" tabindex="-1"><code>option(key, value?)</code> <a class="header-anchor" href="#option-key-value" aria-label="Permalink to &quot;`option(key, value?)`&quot;">​</a></h2><p>Get or set the option value, depending on whether the <code>value</code> is passed in</p><h2 id="select-element" tabindex="-1"><code>select(element)</code> <a class="header-anchor" href="#select-element" aria-label="Permalink to &quot;`select(element)`&quot;">​</a></h2><p>Selects the provided multi-drag item</p><h2 id="deselect-element" tabindex="-1"><code>deselect(element)</code> <a class="header-anchor" href="#deselect-element" aria-label="Permalink to &quot;`deselect(element)`&quot;">​</a></h2><p>Deselects the provided multi-drag item</p><h2 id="getselectedelements" tabindex="-1"><code>getSelectedElements()</code> <a class="header-anchor" href="#getselectedelements" aria-label="Permalink to &quot;`getSelectedElements()`&quot;">​</a></h2><p>Get the selected elements in the list, the return value is available in the case of <code>multiple</code></p>',13)]))}const m=t(l,[["render",n]]);export{k as __pageData,m as default};
